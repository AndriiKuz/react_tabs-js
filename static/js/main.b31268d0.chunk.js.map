{"version":3,"sources":["components/Tabs/Tabs.jsx","App.jsx","index.jsx"],"names":["Tabs","tabs","selectedTabId","onTabSelected","validSelectedTabId","some","tab","id","tabContent","find","content","className","map","cn","href","onClick","onClickHandler","title","App","defaultTab","useState","setSelectedTabId","tabTitle","ReactDOM","render","document","getElementById"],"mappings":"0MAEaA,EAAO,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,KAAMC,EAAmC,EAAnCA,cAAeC,EAAoB,EAApBA,cACpCC,EAAqBH,EAAKI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOL,KACnDA,EACAD,EAAK,GAAGM,GAENC,EAAaP,EAAKQ,MAAK,SAAAH,GAAG,OAAIA,EAAIC,KAAOH,KAAoBM,QAQnE,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKC,UAAU,gBAAf,SACE,6BACIV,EAAKW,KAAI,SAAAN,GAAG,OACZ,oBACEK,UAAWE,IAAG,CAAE,YAAaT,IAAuBE,EAAIC,KACxD,UAAQ,MAFV,SAKE,mBACEO,KAAI,WAAMR,EAAIC,IACd,UAAQ,UACRQ,QAAS,kBAnBA,SAACT,GAClBA,EAAIC,KAAOH,GACbD,EAAcG,GAiBWU,CAAeV,IAHhC,SAKGA,EAAIW,SAPFX,EAAIC,WAcjB,qBAAKI,UAAU,QAAQ,UAAQ,aAA/B,SACGH,QChCIP,G,kBAAO,CAClB,CAAEM,GAAI,QAASU,MAAO,QAASP,QAAS,eACxC,CAAEH,GAAI,QAASU,MAAO,QAASP,QAAS,eACxC,CAAEH,GAAI,QAASU,MAAO,QAASP,QAAS,iBAG7BQ,EAAM,WACjB,IAAMC,EAAalB,EAAK,GAAGM,GAC3B,EAA0Ca,mBAASD,GAAnD,mBAAOjB,EAAP,KAAsBmB,EAAtB,KACMC,EAAWrB,EAAKQ,MAAK,SAAAH,GAAG,OAAIA,EAAIC,KAAOL,KAAee,MAQ5D,OACE,sBAAKN,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,mCACsBW,KAEtB,cAAC,EAAD,CACErB,KAAMA,EACNC,cAAeA,EACfC,cAdgB,SAACG,GACjBA,EAAIC,KAAOL,GACbmB,EAAiBf,EAAIC,WChB3BgB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.b31268d0.chunk.js","sourcesContent":["import cn from 'classnames';\n\nexport const Tabs = ({ tabs, selectedTabId, onTabSelected }) => {\n  const validSelectedTabId = tabs.some(tab => tab.id === selectedTabId)\n    ? selectedTabId\n    : tabs[0].id;\n\n  const tabContent = tabs.find(tab => tab.id === validSelectedTabId).content;\n\n  const onClickHandler = (tab) => {\n    if (tab.id !== validSelectedTabId) {\n      onTabSelected(tab);\n    }\n  };\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          { tabs.map(tab => (\n            <li\n              className={cn({ 'is-active': validSelectedTabId === tab.id })}\n              data-cy=\"Tab\"\n              key={tab.id}\n            >\n              <a\n                href={`#${tab.id}`}\n                data-cy=\"TabLink\"\n                onClick={() => onClickHandler(tab)}\n              >\n                {tab.title}\n              </a>\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {tabContent}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { Tabs } from './components/Tabs';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App = () => {\n  const defaultTab = tabs[0].id;\n  const [selectedTabId, setSelectedTabId] = useState(defaultTab);\n  const tabTitle = tabs.find(tab => tab.id === selectedTabId).title;\n\n  const onTabSelected = (tab) => {\n    if (tab.id !== selectedTabId) {\n      setSelectedTabId(tab.id);\n    }\n  };\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${tabTitle}`}\n      </h1>\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTabId}\n        onTabSelected={onTabSelected}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}